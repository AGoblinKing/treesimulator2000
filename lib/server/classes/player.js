// Generated by CoffeeScript 1.3.3
(function() {
  var Entity, Player,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Entity = require("./entity");

  /*
      Player Class
      Instantiated per user, provides their area of concern
  */


  Player = (function(_super) {

    __extends(Player, _super);

    function Player() {
      return Player.__super__.constructor.apply(this, arguments);
    }

    Player.prototype.setSocket = function(socket) {
      var _this = this;
      this.socket = socket;
      this.socket.on("update", function(_arg) {
        var x, y, z;
        x = _arg.x, y = _arg.y, z = _arg.z;
        x = Math.floor(x);
        y = Math.floor(y);
        z = Math.floor(z);
        return _this.move([x, y, z]);
      });
      return this.socket.emit("update", this.mapSimplify());
    };

    Player.prototype.phantom = true;

    Player.prototype.view = 10;

    Player.prototype.events = {
      "change:view": function(_arg) {
        var entity, _ref;
        entity = _arg.entity;
        return (_ref = this.socket) != null ? _ref.emit("update", [entity.simplify()]) : void 0;
      }
    };

    return Player;

  })(Entity);

  module.exports = Player;

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var Entity, Land,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Entity = require("./entity");

  Land = (function(_super) {

    __extends(Land, _super);

    function Land() {
      return Land.__super__.constructor.apply(this, arguments);
    }

    Land.prototype.init = function() {
      this.sets(Entity.prototype.defaults);
      this.setEvents(Entity.prototype.events);
      this.phosphorus = Math.floor(Math.random() * 100);
      this.potassium = Math.floor(Math.random() * 100);
      return this.nitrogen = Math.floor(Math.random() * 100);
    };

    Land.prototype.eat = function(what, howMuch, who) {
      if (this[what]) {
        if (this[what] <= howMuch) {
          howMuch = this[what];
        }
        who.emit("feed", what, howMuch, this);
        return this[what] -= howMuch;
      }
    };

    Land.prototype.feed = function(what, howMuch, who) {
      return this[what] += howMuch;
    };

    Land.prototype.defaults = {
      phosphorus: 0,
      potassium: 0,
      nitrogen: 0
    };

    Land.prototype.events = {
      "eat": "eat",
      "feed": "feed"
    };

    return Land;

  })(Entity);

  module.exports = Land;

}).call(this);
